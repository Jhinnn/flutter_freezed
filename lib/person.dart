import 'package:freezed_annotation/freezed_annotation.dart';
import 'package:flutter/foundation.dart';

// required: associates our `main.dart` with the code generated by Freezed
part 'person.freezed.dart';
// optional: Since our Person class is serializable, we must add this line.
// But if Person was not serializable, we could skip it.
part 'person.g.dart';


/*
@freezed 不可变类
定义可变类而不是不可变类 
到目前为止，我们已经看到了如何定义一个所有属性都是final的模型;但是您可能希望在模型中定义可变属性。 
frozen通过将@ frozen注释替换为@unfrozen来支持这一点:

operator == and hashCode override (since Person is immutable)

*/
@unfreezed  
class Person with _$Person {
   factory Person({
    required String firstName,
    required String lastName,
    required final int age,   //年龄仍然是不可变的，因为我们显式地将属性标记为final。 
  }) = _Person;

  factory Person.fromJson(Map<String, Object?> json)
      => _$PersonFromJson(json);
}